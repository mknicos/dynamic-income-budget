#!/usr/bin/env ruby

$LOAD_PATH << "lib"
$LOAD_PATH << "models"
$LOAD_PATH << "controllers"
$LOAD_PATH << "views"

require 'expense'
require 'home'
Database.environment = ENV["ENVIRONMENT"] || "production"

HomeView.main

def edit_name_selected(old_name)
  expense = Expense.find_by(name:old_name)
  if expense == nil
    puts "I'm Sorry, there is no expense by that name, try again"
    edit_expense_selected
  else
    puts "Please Enter The New Name: "
    new_name = gets.chomp
    if expense.update_name(new_name)
      puts "This is expense is now named #{new_name}, and has been saved"
    else
      puts "Sorry that name is invalid, or already used, try again"
      edit_name_selected(old_name)
    end
    display_main_menu
  end
end

def edit_amount_selected(expense_name)
  expense = Expense.find_by(name:expense_name)
  if expense == nil
    puts "I'm Sorry there is no expense by that name, try again"
    edit_expense_selected
  else
    puts "Please Enter The New Amount for #{expense.name}, which occurs #{expense.recurrance} "
    new_amount = gets.chomp.to_i
    if expense.update_amount(new_amount)
      "#{expense_name} amount is now #{new_amount} and recurs #{expense.recurrance}"
      display_main_menu
    else
      puts "I'm sorry, please try again"
      edit_amount_selected(expense_name)
    end
  end
end

def view_expenses_selected
  expenses = Expense.all
  puts "______EXPENSES______"
  print "\n"
  expenses.each do |expense|
    puts expense[:name].upcase
    print "$" + expense[:amount].to_s + "\s"
    print expense[:recurrance] + "\n"
    puts expense[:description]
    puts "___________________"
    puts "-------------------"
    print "\n"
  end
  next_menu = <<EOS

What would you like to do now?
-----------------------------
1. Add Expense
2. Edit Expense
3. Delete Expense
4. Main Menu
---------------------------
Type 'q' to quit
EOS

  print next_menu
  user_selection = gets.chomp

  case user_selection
  when "1"
    add_expense_selected
  when "2"
    edit_expense_selected
  when "3"
    delete_expense_selected
  when "4"
    display_main_menu
  when "q"
    exit
  when "Q"
    exit
  else
    puts "invalid input"
    display_main_menu
  end
end

def delete_expense_selected
  puts "------------------"
  puts "Congrats! One Less Expense!"
  puts "What expense would you like to delete?"
  puts "Type 'b' to go back"
  expense_name = gets.chomp.downcase
  if expense_name == "b"
    display_main_menu
  else
    expense = Expense.find_by(name:expense_name)
    if expense == nil
      puts "There is no expense by that name, try again"
      delete_expense_selected
    else
      puts "Are You Sure you would like to delete:"
      puts "#{expense_name} for #{expense.amount} recurring #{expense.recurrance} ?"
      puts "Type 'y' or 'n'"
      confirm = gets.chomp

      case confirm
      when 'n'
        view_expenses_selected
      when 'y'
        expense.remove
        display_main_menu
      else
        puts "Invalid input, try again"
        delete_expense_selected
      end

    end
  end
end
